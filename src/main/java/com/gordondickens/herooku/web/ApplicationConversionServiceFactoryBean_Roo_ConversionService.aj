// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gordondickens.herooku.web;

import com.gordondickens.herooku.domain.Item;
import com.gordondickens.herooku.service.ItemService;
import java.lang.Long;
import java.lang.String;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    ItemService ApplicationConversionServiceFactoryBean.itemService;
    
    public Converter<Item, String> ApplicationConversionServiceFactoryBean.getItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gordondickens.herooku.domain.Item, java.lang.String>() {
            public String convert(Item item) {
                return new StringBuilder().append(item.getName()).append(" ").append(item.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Item> ApplicationConversionServiceFactoryBean.getIdToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gordondickens.herooku.domain.Item>() {
            public com.gordondickens.herooku.domain.Item convert(java.lang.Long id) {
                return itemService.findItem(id);
            }
        };
    }
    
    public Converter<String, Item> ApplicationConversionServiceFactoryBean.getStringToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gordondickens.herooku.domain.Item>() {
            public com.gordondickens.herooku.domain.Item convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Item.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getItemToStringConverter());
        registry.addConverter(getIdToItemConverter());
        registry.addConverter(getStringToItemConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
